package fr.formation.inti.entities;
// Generated 18 avr. 2019 16:14:00 by Hibernate Tools 5.1.10.Final

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Comment generated by hbm2java
 */
@Entity
@Table(name = "comment", catalog = "urbanproject")
public class Comment implements java.io.Serializable {

	private CommentId id;
	private AmbientPower ambientPower;
	private Signalement signalement;
	private UrbanPlanning urbanPlanning;
	private Users users;
	private Date date;
	private String text;

	public Comment() {
	}

	public Comment(CommentId id, AmbientPower ambientPower, Signalement signalement, UrbanPlanning urbanPlanning,
			Users users) {
		this.id = id;
		this.ambientPower = ambientPower;
		this.signalement = signalement;
		this.urbanPlanning = urbanPlanning;
		this.users = users;
	}

	public Comment(CommentId id, AmbientPower ambientPower, Signalement signalement, UrbanPlanning urbanPlanning,
			Users users, Date date, String text) {
		this.id = id;
		this.ambientPower = ambientPower;
		this.signalement = signalement;
		this.urbanPlanning = urbanPlanning;
		this.users = users;
		this.date = date;
		this.text = text;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "idComment", column = @Column(name = "idComment", nullable = false)),
			@AttributeOverride(name = "usersIdusers", column = @Column(name = "users_idusers", nullable = false)),
			@AttributeOverride(name = "signalementIdsignalement", column = @Column(name = "signalement_idsignalement", nullable = false)),
			@AttributeOverride(name = "ambientPowerIdambientPower", column = @Column(name = "ambient_power_idambient_power", nullable = false)),
			@AttributeOverride(name = "urbanPlanningIdplanningProposal", column = @Column(name = "urban_planning_idplanning_proposal", nullable = false)) })
	public CommentId getId() {
		return this.id;
	}

	public void setId(CommentId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ambient_power_idambient_power", nullable = false, insertable = false, updatable = false)
	public AmbientPower getAmbientPower() {
		return this.ambientPower;
	}

	public void setAmbientPower(AmbientPower ambientPower) {
		this.ambientPower = ambientPower;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "signalement_idsignalement", nullable = false, insertable = false, updatable = false)
	public Signalement getSignalement() {
		return this.signalement;
	}

	public void setSignalement(Signalement signalement) {
		this.signalement = signalement;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "urban_planning_idplanning_proposal", nullable = false, insertable = false, updatable = false)
	public UrbanPlanning getUrbanPlanning() {
		return this.urbanPlanning;
	}

	public void setUrbanPlanning(UrbanPlanning urbanPlanning) {
		this.urbanPlanning = urbanPlanning;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "users_idusers", nullable = false, insertable = false, updatable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Date", length = 10)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Column(name = "text", length = 16777215)
	public String getText() {
		return this.text;
	}

	public void setText(String text) {
		this.text = text;
	}

}
